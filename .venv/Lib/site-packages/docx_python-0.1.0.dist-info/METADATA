Metadata-Version: 2.1
Name: docx-python
Version: 0.1.0
Summary: A Python SDK for Docx API Service
License: MIT
Author: Renix Informatics
Author-email: info@renix.com
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: flake8 (>=7.1.1,<8.0.0)
Requires-Dist: mypy (>=1.11.1,<2.0.0)
Requires-Dist: pydantic (>=2.8.2,<3.0.0)
Requires-Dist: pytest (>=8.3.2,<9.0.0)
Requires-Dist: requests (>=2.26.0,<3.0.0)
Description-Content-Type: text/markdown

![DOC](https://github.com/renixinformatics/docx-sdk/assets/131959683/994c8fc3-f5c7-4fe4-99d5-0b08dbfcdcf1)

---
Documentation : [https://docxsdk.z29.web.core.windows.net/](https://docxsdk.z29.web.core.windows.net/)

# Docx Python SDK

Welcome to the DocX SDK, a product developed by Renix Informatics for intelligent document processing. This software development kit (SDK) offers a comprehensive set of tools and libraries that helps developers to build and streamline their application development for document-related tasks.

## Installation

You can install the Docx Python SDK using pip:

```shell
pip install docx
```

## Usage
Here's a quick example of how to use the Docx SDK:

```shell
from docx import Docx

# Initialize the Docx client
docx_client = Docx(api_key="your_api_key")

# Perform attribute extraction
response = docx_client.attribute_extraction.create(file_path="path/to/your/file.jpg")

# Process the response
print(response)
```

## Configuration
You can configure the SDK using environment variables:

* DOCX_API_KEY: Your Docx API key
* DOCX_BASE_URL: Custom base URL for the Docx API (optional)

## Benefits
* Attribute Extraction: Extract attributes from documents and images
* Easy-to-use API
* Customizable configuration

## Featured Modules

| S.no |  **Module**  | **Discription** |
|:-----|:--------:|------:|
| 1   | OCR | Extract handwritten and printed text from documents. |
| 2   |  Layout Analysis  |   Analyze the template and layout of the documents and categorize the regions |
| 3   | Table Detection and Extraction |    Detect and Extract table from the documents |
| 4   | Document Tagging |  Tagging different sections in a document |   
| 5   | Translation | Detect and translate text from documents| 
| 6   | Signature Detection | Localize signatures in documents and extract them as image snippets | 
| 7   | Handwritten Detection and Understanding|Localize handwriting in documents and convert it into machine-processable text|
| 8   | Deidentification & Redaction of PII Data|Detect, classify and redact sensitive information from documents| 
| 9   | Text Summarisation| Summarize information from documents for quick reference.| 
| 10   | Named Entity Extraction | Derive keyable (Key Value Pairs) information from documents.| 


